import { Match } from 'ts-toolbelt/out/Any/_Internal';
import { IntersectKeys as OIntersectKeys } from 'ts-toolbelt/out/Object/IntersectKeys';
import { ObjectOf } from 'ts-toolbelt/out/List/ObjectOf';
import { List } from 'ts-toolbelt/out/List/List';
/**
 * Get the intersecting entries of `L` & `L1`
 * (If `match = 'default'`, no type checks are done)
 * @param L to check similarities with
 * @param L1 to check similarities against
 * @returns [[Key]]
 * @example
 * ```ts
 * ```
 */
export declare type IntersectKeys<L extends List, L1 extends List, match extends Match = 'default'> = OIntersectKeys<ObjectOf<L>, L1, match>;
