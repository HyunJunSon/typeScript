import { Filter as OFilter } from 'ts-toolbelt/out/Object/Filter';
import { ListOf } from 'ts-toolbelt/out/Object/ListOf';
import { Match } from 'ts-toolbelt/out/Any/_Internal';
import { ObjectOf } from 'ts-toolbelt/out/List/ObjectOf';
import { List } from 'ts-toolbelt/out/List/List';
/**
 * Filter out of `L` the entries that match `M`
 * @param L to remove from
 * @param M to select entries
 * @param match (?=`'default'`) to change precision
 * @returns [[List]]
 * @example
 * ```ts
 * ```
 */
export declare type Filter<L extends List, M extends any, match extends Match = 'default'> = ListOf<OFilter<ObjectOf<L>, M, match>>;
