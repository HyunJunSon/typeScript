import { Match } from 'ts-toolbelt/out/Any/_Internal';
import { Path as OPath } from 'ts-toolbelt/out/Object/Path';
import { Is } from 'ts-toolbelt/out/Any/Is';
import { Key } from 'ts-toolbelt/out/Any/Key';
import { List } from 'ts-toolbelt/out/List/List';
/**
 * Check whether `O` has nested properties that match `M`
 * @param O to be inspected
 * @param Path to be followed
 * @param M (?=`any`) to check field type
 * @param match (?=`'default'`) to change precision
 * @returns [[Boolean]]
 * @example
 * ```ts
 * ```
 */
export declare type HasPath<O extends object, Path extends List<Key>, M extends any = any, match extends Match = 'default'> = Is<OPath<O, Path>, M, match>;
