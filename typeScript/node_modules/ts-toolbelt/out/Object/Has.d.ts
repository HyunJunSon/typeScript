import { Match } from 'ts-toolbelt/out/Any/_Internal';
import { Is } from 'ts-toolbelt/out/Any/Is';
import { At } from 'ts-toolbelt/out/Any/At';
import { Key } from 'ts-toolbelt/out/Any/Key';
/**
 * Check whether `O` has a field of key `K` that matches `M`
 * @param O to be inspected
 * @param K to choose field
 * @param M (?=`any`) to check field type
 * @param match (?=`'default'`) to change precision
 * @returns [[Boolean]]
 * @example
 * ```ts
 * ```
 */
export declare type Has<O extends object, K extends Key, M extends any = any, match extends Match = 'default'> = Is<At<O, K>, M, match>;
